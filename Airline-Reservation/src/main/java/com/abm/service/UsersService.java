package com.abm.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.abm.entity.Reservation;
import com.abm.entity.Users;
import com.abm.exception.UserServiceException;
import com.abm.repository.UsersRepository;

@Service
public class UsersService {
	@Autowired
	UsersRepository usersRepository;

	/*public ResponseEntity<Object> userRegistration(UserRegisterRequest request) {//requesting is coming from  UserRegisterrequest class
		   Users users=new Users();//Entity class
		   // users.setUserId(request.getUserId()!= null ? request.getUserId() :1001); //autogenerated
		   users.setUserName(request.getUserName());  //setting the values which are coming from UserRegisterrequest classs
		   users.setEmail(request.getEmail());
		   users.setDob(request.getDob());
		   users.setPassword(request.getPassword());
		   users.setPhone(request.getPhone());
		   usersRepository.save(users);
		   String msg = "registration completed successfully...!";
		// Create a response object with a JSON structure
		    Map<String, Object> response = new HashMap<>();
		    response.put("message", msg);
		    response.put("status", "success");

		    return new ResponseEntity<>(response, HttpStatus.OK);
	}*/// implementing new method
	
	public Users  findByUserNameAndPassword(String userName, String password) {
		Users response=usersRepository.findByUserNameAndPassword(userName, password);
		return  response;
    }

	public int register(Users users) {
		Long count=usersRepository.findIfUserExists(users.getUserName());
		    if(count==0) {
		    	for(Reservation reservation: users.getReservations()) {
		    	 reservation.setUser(users);
		    	}
		    	Users savedUsers=usersRepository.save(users);
		    	return  savedUsers.getUserId();
		    }
		    else {
		    	throw new UserServiceException("User Already  exists..!");
		    }
	}


}
